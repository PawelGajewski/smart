{"version":3,"sources":["components/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","onAdd","style","backgroundColor","className","App","useState","status","setStatus","name","setName","useEffect","a","fetchStatus","data","getStatus","fetch","method","headers","versioning","body","JSON","stringify","res","json","changeStatus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAQeA,EARA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAeC,GAAmB,EAA5BC,QAA4B,EAAnBD,OAAOE,EAAY,EAAZA,MACpC,OACI,wBAAQC,MAAO,CAAEC,gBAAiBJ,GAAQK,UAAU,MAAMJ,QAASC,EAAnE,SACI,6BAAMH,O,MCqEHO,MApEf,WAAgB,IAAD,EACeC,qBADf,mBACNC,EADM,KACEC,EADF,OAEWF,qBAFX,mBAENG,EAFM,KAEAC,EAFA,KAIbC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACGC,IADH,OACVC,EADU,OAEhBN,EAAUM,EAAKP,QACfG,EAAQI,EAAKL,MAHG,2CAAH,qDAMfM,KACC,IAEH,IAAMF,EAAW,uCAAG,8BAAAD,EAAA,sEACAI,MAChB,oDACA,CACEC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,aACE,+DACFC,WAAY,SAEdC,KAAMC,KAAKC,cAXG,cACZC,EADY,gBAcCA,EAAIC,OAdL,cAcZV,EAdY,yBAeXA,GAfW,2CAAH,qDAkBXW,EAAY,uCAAG,sBAAAb,EAAA,sEACAC,IADA,8BAGDG,MAChB,oDACA,CACEC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,aAAc,+DACdC,WAAY,SAEdC,KAAMC,KAAKC,UAAU,CACnB,GAAM,IACN,KAAQ,OACR,QAAWf,MAfE,cAmBnBC,GAAWD,GAnBQ,2CAAH,qDAuBlB,OACE,sBAAKH,UAAU,YAAf,UACE,6BAAKK,IACL,cAAC,EAAD,CACEX,KAAMS,EAAS,KAAM,MACrBN,MAAOwB,EACPzB,QAASyB,EACT1B,MAAOQ,EAAS,QAAU,YCtDnBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0c1fed7.chunk.js","sourcesContent":["const Button = ({ text, onClick, color, onAdd }) => {\r\n    return (\r\n        <button style={{ backgroundColor: color}} className=\"btn\" onClick={onAdd}>\r\n            <h2>{ text }</h2>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from \"./components/Button\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [status, setStatus] = useState();\n  const [name, setName] = useState();\n\n  useEffect(() => {\n    const getStatus = async () => {\n      const data = await fetchStatus()\n      setStatus(data.status)\n      setName(data.name)\n      //console.log(data.status)\n    }\n    getStatus()\n  }, [])\n\n  const fetchStatus = async () => {\n    const res = await fetch(\n      \"https://api.jsonbin.io/b/602d9db60665b21b00b926bc\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"secret-key\":\n            \"$2b$10$v/hKaI/85bF07fQJXEGB9.xJAfAWw7SA7so6.AePQ57DcF5Nketem\",\n          versioning: \"false\",\n        },\n        body: JSON.stringify(),\n      }\n    );\n    const data = await res.json();\n    return data;\n  };\n\n  const changeStatus = async () => {\n    const data = await fetchStatus()\n\n    const res = await fetch(\n      \"https://api.jsonbin.io/b/602d9db60665b21b00b926bc\",\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"secret-key\": \"$2b$10$v/hKaI/85bF07fQJXEGB9.xJAfAWw7SA7so6.AePQ57DcF5Nketem\",\n          versioning: \"false\",\n        },\n        body: JSON.stringify({\n          \"id\": \"1\",\n          \"name\": \"led0\",\n          \"status\": !status\n        }),\n      }\n    );\n    setStatus(!status)\n  }\n  \n\n  return (\n    <div className=\"container\">\n      <h2>{name}</h2>\n      <Button\n        text={status ? \"On\": \"Off\"}\n        onAdd={changeStatus}\n        onClick={changeStatus}\n        color={status ? \"green\" : \"red\"}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}